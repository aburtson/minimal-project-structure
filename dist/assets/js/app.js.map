{"version":3,"sources":["main.js","squares.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["'use strict';\n","$.fn.squares = function(settings) {\n    new Squares(this, settings);\n};\n\nfunction Squares(element, settings){\n    if (settings === undefined) {\n        settings = {};\n    }\n\n    var object = this;\n\n    object.container = $(element);\n    object.squareList = $('.square__list');\n    object.squares = this.squareList.find('.square');\n    object.panelContainer = $('.square-panel__list');\n    object.panels = this.panelContainer.find('.square-panel');\n    object.delaySpeed = 150;\n    object.squareCount = 0;\n\n    object.columns = settings.columns;\n\n    object.squares.each(function(i){\n        object.squareCount += i * object.delaySpeed;\n    });\n\n    object.setColumns();\n    object.numberSquares();\n    object.setSquareHeight();\n    object.revealPanels();\n\n    $(window).on('resize', function(){\n        object.setSquareHeight();\n    });\n}\n\nSquares.prototype.numberSquares = function(){\n    var object = this;\n    var $squares = object.squares;\n    var $panels = object.panels;\n\n    $squares.each(function(i){\n        var $square = $(this);\n        $square.attr('data-square', 'square-' + i);\n    });\n    $panels.each(function(i){\n        var $panel = $(this);\n        $panel.attr('id', 'square-' + i);\n    });\n};\n\nSquares.prototype.setSquareHeight = function(){\n    var object = this;\n    var $squares = object.squares;\n\n    $squares.each(function(){\n        var $square = $(this);\n        var squareHeight = $square.width();\n        var $squareContent = $square.find('.square-content');\n        var squareContentHeight = $squareContent.outerHeight();\n        $square.css('height', squareHeight);\n        $squareContent.css('margin-top', (squareContentHeight / 2) * -1);\n    });\n};\n\nSquares.prototype.revealPanels = function(){\n    var object = this;\n    var $container = object.container;\n    var $squares = object.squares;\n    var $panels = object.panels;\n    var $panelContainer = object.panelContainer;\n    var delaySpeed = object.delaySpeed;\n\n    $squares.each(function(){\n        var $square = $(this);\n\n        $square.on('click', function(){\n            var panelValue = $square.attr('data-square');\n\n            $squares.removeClass('active');\n            $square.addClass('active');\n\n            if ($container.attr('data-panel') == 'closed') {\n                $squares.each(function(i){\n                    var $square = $(this);\n                    var currentDelay;\n                    currentDelay = i * delaySpeed;\n                    setTimeout(function(){\n                        $square.animate({ opacity: 0 }, delaySpeed);\n                    }, currentDelay);\n                });\n                setTimeout(function(){\n                    $container.animate({ opacity: 0 }, 0);\n                }, 800);\n\n                setTimeout(function(){\n                    setActivePanel();\n                    $container.attr('data-panel', 'open');\n                    object.setSquareHeight();\n                }, 800);\n\n                setTimeout(function(){\n                    $container.animate({ opacity: 1 }, 200);\n                }, 1200);\n\n                setTimeout(function(){\n                    $squares.each(function(i){\n                        var $square = $(this);\n                        var currentDelay;\n                        currentDelay = i * delaySpeed;\n                        setTimeout(function(){\n                            $square.animate({ opacity: 1 }, delaySpeed);\n                        }, currentDelay);\n                    });\n                }, 1400);\n            } else {\n                setActivePanel();\n            }\n\n            function setActivePanel() {\n                $panels.each(function(){\n                    var $panel = $(this);\n                    var panelId = $panel.attr('id');\n                    var panelHeight = $panel.height();\n\n                    if (panelId == panelValue) {\n                        $panels.removeClass('active');\n                        $panelContainer.css('height', panelHeight);\n                        $panel.addClass('active');\n\n                        $(window).on('resize', function(){\n                            panelHeight = $panel.height();\n                            if ($container.attr('data-panel') == 'open') {\n                                $panelContainer.css('height', panelHeight);\n                            } else {\n                                $panelContainer.css('height', '0');\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    });\n\n    $panels.each(function(){\n        var $close = $('.square-panel__close');\n\n        $close.on('click', function(){\n            $container.animate({ opacity: 0 }, 200);\n\n            setTimeout(function(){\n                $panels.removeClass('active');\n                $panelContainer.css('height', '0');\n                $container.attr('data-panel', 'closed');\n                object.setSquareHeight();\n            }, 400);\n\n            setTimeout(function(){\n                $container.animate({ opacity: 1 }, 200);\n            }, 800);\n        });\n    });\n};\n\nSquares.prototype.setColumns = function() {\n    var object = this;\n    var columns = object.columns;\n    var $container = object.container;\n\n    if (columns <= 0 || columns > 4) {\n        columns = 4;\n    }\n    $container.addClass('col-' + columns);\n};\n\n$('.squares').squares({\n    columns: 4\n});"]}